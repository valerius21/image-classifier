// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["filterJson"]
}

// --------------------------------------

model User {
  id                        String   @id @default(uuid())
  createdAt                 DateTime @default(now())
  updatedAt                 DateTime @updatedAt
  name                      String?
  email                     String   @unique
  hashedPassword            String?
  role                      String   @default("USER")
  currentPrivateSubmissions Int      @default(0)
  currentPublicSubmissions  Int      @default(0)

  tokens     Token[]
  sessions   Session[]
  Submission Submission[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User?   @relation(fields: [userId], references: [id])
  userId String?
}

model Token {
  id          Int      @id @default(autoincrement())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  hashedToken String
  type        String
  // See note below about TokenType enum
  // type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User   @relation(fields: [userId], references: [id])
  userId String

  @@unique([hashedToken, type])
}

// NOTE: It's highly recommended to use an enum for the token type
//       but enums only work in Postgres.
//       See: https://blitzjs.com/docs/database-overview#switch-to-postgresql
// enum TokenType {
//   RESET_PASSWORD
// }

// --------------------------------------
// A dataset ex.
model Dataset {
  id         String       @id @default(uuid())
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  attributes Json
  submission Submission[]
}

model Submission {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  dataset   Dataset  @relation(fields: [datasetId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  datasetId String
}
